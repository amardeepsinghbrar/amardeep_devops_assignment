pipeline {
    agent any

    parameters {
        string(name: 'COMMIT_ID', description: 'Commit ID to use for the Docker image')
    }
    environment{
        REPO_URL  = "https://github.com/amardeepsinghbrar/amardeep_devops_assignment"
        registry   = "amardeepsingh01/petclinic"
        AWS_REGION = "us-east-1"
        EKS_NAME   = "prod-eks"

    }
    stages {
        stage('Checkout Helm Chart') {
            steps {
                script {
                    // Clean workspace before checkout
                    deleteDir()

                    checkout([$class: 'GitSCM', branches: [[name: "*/main"]], userRemoteConfigs: [[url: "${env.REPO_URL}"]]])
                    
                    // Move to the directory containing the Helm chart
                    dir('helm_charts/springboot-pets') {
                        // Print out the content of the Helm chart directory
                        sh 'ls -la'
                    }
                }
            }
        }
        stage('Connect to kubernetes') {
            steps {
                script {
                    // Deploy the Helm chart to Kubernetes
                    sh "aws eks --region ${env.AWS_REGION} update-kubeconfig --name ${env.EKS_NAME}"
                }
            }
        }
        stage('Deploy Helm Chart') {
            steps {
                script {
                    // Deploy the Helm chart to Kubernetes
                    sh "kubectl get nodes"
                    // dir('helm_charts/springboot-pets') {
                    //     // Install Helm chart with the specified Docker image tag
                    //     sh "helm install springboot-pets --set image.tag=${params.COMMIT_ID} ."
                    // }
                }
            }
        }
    }
}
