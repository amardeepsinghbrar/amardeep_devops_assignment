pipeline {
    agent any

    parameters {
        string(name: 'GIT_BRANCH',defaultValue: "main", description: 'Git branch to build')
        string(name: 'COMMIT_ID', description: 'Commit ID to use for checking out the code')
    }
    environment{
        REPO_URL = "https://github.com/amardeepsinghbrar/spring-petclinic"
        registry = "amardeepsingh01/petclinic"
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    // Clean workspace before checkout
                    deleteDir()

                    // Fetch the code from the specified Git branch and commit ID
                    checkout([$class: 'GitSCM', branches: [[name: "${params.GIT_BRANCH}"]], userRemoteConfigs: [[url: "${env.REPO_URL}"]]])
                    //checkout scm: [$class: 'GitSCM', userRemoteConfigs: [[url: ${REPO_URL}, credentialsId: credential]], branches: [[name: ${params.GIT_BRANCH}]]],poll: false
                                    // Fetch the Git tag
                }
            }
        }

        stage('Find Commit ID') {
            steps {
                script {
                    def commitId = env.GIT_COMMIT
                    echo 'Commit ID: ${commitId}'
                    def commitId2 = sh(script: 'git log -1 --pretty=format:%h', returnStdout: true).trim()
                    echo 'Commit ID2: ${commitId2}'
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    echo 'Building Docker image...'
                    //sh "docker build -t petclinic:${COMMIT_ID} ."
                    //echo 'Tagging Docker image from petclinic:${COMMIT_ID} to amardeepsingh01/petclinic:${COMMIT_ID}'
                    //sh "docker tag petclinic:${COMMIT_ID} amardeepsingh01/petclinic:${COMMIT_ID}"

                    dockerImage = docker.build registry + ":$COMMIT_ID"

                }
            }
        }
        // stage('Print Credentials') {
        //     steps {
        //         script {
        //             withCredentials([usernamePassword(credentialsId: 'dockerhub_id', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
        //                 echo "Username: ${USERNAME}"
        //                 // You can print the password if necessary, but it's generally not recommended
        //                 echo "Password: ${PASSWORD}"
        //             }
        //         }
        //     }
        // }
  
        stage('Push to Docker Hub') {
            steps {
                script {
                    //echo 'Login to docker hub'
                    def registryCredential = 'dockerhub_id'

                    //echo 'Pushing the image amardeepsingh01/petclinic:${COMMIT_ID}'
                    //sh "docker push amardeepsingh01/petclinic:${COMMIT_ID}"
                    docker.withRegistry( '', registryCredential ) { dockerImage.push()}
                }
            }
        }
        stage('Removing image from local') {
            steps {
                script {
                    echo 'Removing local copies of images'
                    //sh "docker rmi petclinic${COMMIT_ID}"
                    //sh "docker rmi amardeepsingh01/petclinic:${COMMIT_ID}"
                    sh "docker rmi $registry:$COMMIT_ID"
                }
            }
        }
    }
}
